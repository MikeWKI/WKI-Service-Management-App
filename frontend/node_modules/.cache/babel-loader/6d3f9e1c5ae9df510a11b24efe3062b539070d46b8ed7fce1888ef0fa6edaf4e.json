{"ast":null,"code":"import React,{useState,useEffect}from'react';import{createPortal}from'react-dom';import{X,TrendingUp,TrendingDown,Activity,Calendar,Target,AlertCircle}from'lucide-react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer,ReferenceLine}from'recharts';import{fetchTrendData,formatTrendAnalysis,getTrendIcon,getTrendColorClass}from'../services/trendApi';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TrendModal=_ref=>{let{isOpen,onClose,locationId,locationName,metric,metricDisplayName,target}=_ref;const[trendData,setTrendData]=useState(null);const[chartData,setChartData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[selectedPeriod,setSelectedPeriod]=useState(12);useEffect(()=>{if(isOpen&&locationId&&metric){fetchTrendDataForModal();}},[isOpen,locationId,metric,selectedPeriod]);// Lock body scroll when modal is open\nuseEffect(()=>{if(isOpen){document.body.style.overflow='hidden';return()=>{document.body.style.overflow='unset';};}},[isOpen]);// Handle escape key\nuseEffect(()=>{const handleEscape=e=>{if(e.key==='Escape'){onClose();}};if(isOpen){document.addEventListener('keydown',handleEscape);return()=>document.removeEventListener('keydown',handleEscape);}},[isOpen,onClose]);const fetchTrendDataForModal=async()=>{setLoading(true);setError(null);try{const response=await fetchTrendData(locationId,metric,selectedPeriod);if(response.success&&response.data){setTrendData(response.data);// Transform data for chart - ensure dataPoints is an array\nif(response.data.dataPoints&&Array.isArray(response.data.dataPoints)){const chartPoints=response.data.dataPoints.map(point=>({month:\"\".concat(point.month,\" \").concat(point.year),value:point.value,formattedDate:new Date(point.year,getMonthNumber(point.month)-1).toLocaleDateString('en-US',{month:'short',year:'2-digit'}),uploadDate:point.uploadDate}));setChartData(chartPoints);}else{console.warn('dataPoints is not an array:',response.data.dataPoints);setChartData([]);}}else{setError('Unable to load trend data. This may be the first upload for this metric.');setTrendData(null);setChartData([]);}}catch(err){console.error('Error fetching trend data:',err);setError('Failed to load trend data. Please try again.');setTrendData(null);setChartData([]);}finally{setLoading(false);}};const getMonthNumber=monthName=>{const months=['January','February','March','April','May','June','July','August','September','October','November','December'];return months.indexOf(monthName)+1;};const getTrendColor=trend=>{switch(trend){case'improving':return'#10B981';// green-500\ncase'declining':return'#EF4444';// red-500\ncase'stable':return'#3B82F6';// blue-500\ndefault:return'#6B7280';// gray-500\n}};const formatValue=value=>{if(metric.includes('Percent')||metric.includes('%')){return\"\".concat(value.toFixed(1),\"%\");}if(metric.includes('Days')||metric.includes('Dwell')||metric.includes('Hours')){return\"\".concat(value.toFixed(1));}return value.toFixed(1);};const getTargetValue=()=>{if(!target)return null;const match=target.match(/(\\d+\\.?\\d*)/);return match?parseFloat(match[1]):null;};if(!isOpen)return null;return/*#__PURE__*/createPortal(/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',backgroundColor:'rgba(0, 0, 0, 0.75)',backdropFilter:'blur(8px)',zIndex:999999,margin:0,padding:0,boxSizing:'border-box',isolation:'isolate'},onClick:e=>{if(e.target===e.currentTarget){onClose();}},children:/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%, -50%)',width:'90vw',maxWidth:'1200px',height:'85vh',minHeight:'600px',maxHeight:'900px',background:'linear-gradient(135deg, #0f172a 0%, #1e293b 100%)',borderRadius:'16px',border:'1px solid #475569',boxShadow:'0 25px 50px -12px rgba(0, 0, 0, 0.8)',display:'flex',flexDirection:'column',overflow:'hidden',transition:'none',flexShrink:0,flexGrow:0,boxSizing:'border-box',margin:0,zIndex:1000000},onMouseEnter:e=>e.stopPropagation(),onMouseLeave:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'24px',borderBottom:'1px solid #475569',flexShrink:0,boxSizing:'border-box'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'16px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'48px',height:'48px',background:'linear-gradient(135deg, #3b82f6 0%, #2563eb 100%)',borderRadius:'12px',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(Activity,{className:\"w-6 h-6 text-white\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'24px',fontWeight:'bold',color:'white',margin:0},children:metricDisplayName}),/*#__PURE__*/_jsxs(\"p\",{style:{color:'#cbd5e1',margin:0,marginTop:'4px'},children:[locationName,\" - Trend Analysis\"]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,style:{width:'32px',height:'32px',borderRadius:'8px',backgroundColor:'#475569',border:'none',display:'flex',alignItems:'center',justifyContent:'center',cursor:'pointer',transition:'background-color 0.2s'},onMouseEnter:e=>{e.target.style.backgroundColor='#64748b';},onMouseLeave:e=>{e.target.style.backgroundColor='#475569';},children:/*#__PURE__*/_jsx(X,{className:\"w-5 h-5 text-slate-300\"})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,overflowY:'auto',padding:'24px',minHeight:0,position:'relative',boxSizing:'border-box'},children:[loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-4 border-slate-600 border-t-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-slate-300\",children:\"Loading trend analysis...\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-900/20 border border-red-500/30 rounded-lg p-4 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"w-5 h-5 text-red-400\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-red-400 font-medium\",children:\"Unable to Load Trend Data\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-300 mt-2\",children:error})]}),!loading&&!error&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-slate-300 font-medium\",children:\"Time Period:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedPeriod,onChange:e=>setSelectedPeriod(Number(e.target.value)),className:\"bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white focus:border-blue-500 focus:outline-none\",children:[/*#__PURE__*/_jsx(\"option\",{value:6,children:\"Last 6 months\"}),/*#__PURE__*/_jsx(\"option\",{value:12,children:\"Last 12 months\"}),/*#__PURE__*/_jsx(\"option\",{value:24,children:\"Last 24 months\"})]})]}),trendData&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg \".concat(getTrendColorClass(trendData.trend)),children:getTrendIcon(trendData.trend)}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold capitalize \".concat(getTrendColorClass(trendData.trend)),children:trendData.trend})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-800/50 rounded-lg p-4 border border-slate-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-slate-400 text-sm\",children:\"Current Value\"}),/*#__PURE__*/_jsx(Target,{className:\"w-4 h-4 text-slate-400\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-white\",children:(trendData===null||trendData===void 0?void 0:trendData.currentValue)!==undefined?formatValue(trendData.currentValue):'Loading...'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-slate-300\",children:(trendData===null||trendData===void 0?void 0:trendData.currentPeriod)||'Loading period...'}),target&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-slate-300\",children:[\"Target: \",target]})]}),trendData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-800/50 rounded-lg p-4 border border-slate-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-slate-400 text-sm\",children:\"Months of Data\"}),/*#__PURE__*/_jsx(Calendar,{className:\"w-4 h-4 text-slate-400\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-white\",children:trendData.monthsOfData}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-slate-300\",children:\"Data points available\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-800/50 rounded-lg p-4 border border-slate-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-slate-400 text-sm\",children:\"Change from Previous\"}),trendData.analysis.currentVsPrevious>0?/*#__PURE__*/_jsx(TrendingUp,{className:\"w-4 h-4 text-green-400\"}):/*#__PURE__*/_jsx(TrendingDown,{className:\"w-4 h-4 text-red-400\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-2xl font-bold \".concat(trendData.analysis.currentVsPrevious>0?'text-green-400':'text-red-400'),children:[trendData.analysis.currentVsPrevious>0?'+':'',trendData.analysis.currentVsPrevious.toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-slate-300\",children:\"vs last month\"})]})]})]}),chartData.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'rgba(30, 41, 59, 0.5)',borderRadius:'8px',padding:'24px',border:'1px solid #475569',marginBottom:'24px',boxSizing:'border-box'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'18px',fontWeight:'600',color:'white',margin:0,marginBottom:'16px'},children:\"Trend Chart\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'320px',minHeight:'320px',maxHeight:'320px',position:'relative',overflow:'hidden',boxSizing:'border-box'},children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,margin:{top:20,right:30,left:20,bottom:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#374151\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"formattedDate\",stroke:\"#9CA3AF\",fontSize:12}),/*#__PURE__*/_jsx(YAxis,{stroke:\"#9CA3AF\",fontSize:12,tickFormatter:formatValue,width:60}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'#1F2937',border:'1px solid #374151',borderRadius:'8px',color:'#F9FAFB'},formatter:value=>[formatValue(value),metricDisplayName],labelStyle:{color:'#D1D5DB'}}),getTargetValue()!==null&&/*#__PURE__*/_jsx(ReferenceLine,{y:getTargetValue(),stroke:\"#F59E0B\",strokeDasharray:\"5 5\",label:{value:\"Target\",position:\"insideTopRight\",fill:\"#F59E0B\"}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"value\",stroke:trendData?getTrendColor(trendData.trend):'#3B82F6',strokeWidth:3,dot:{r:6,fill:trendData?getTrendColor(trendData.trend):'#3B82F6'},activeDot:{r:8,stroke:'#ffffff',strokeWidth:2}})]})})})]}),trendData&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-800/50 rounded-lg p-6 border border-slate-700\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white mb-4\",children:\"Trend Analysis\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 mb-4\",children:formatTrendAnalysis(trendData)}),trendData.analysis.bestMonth&&trendData.analysis.worstMonth&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-green-400 font-medium mb-2\",children:\"Best Performance\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[formatValue(trendData.analysis.bestMonth.value),\" in \",trendData.analysis.bestMonth.month,\" \",trendData.analysis.bestMonth.year]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-red-400 font-medium mb-2\",children:\"Needs Improvement\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[formatValue(trendData.analysis.worstMonth.value),\" in \",trendData.analysis.worstMonth.month,\" \",trendData.analysis.worstMonth.year]})]})]})]}),chartData.length===0&&!loading&&!error&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(Activity,{className:\"w-16 h-16 text-slate-500 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-slate-300 mb-2\",children:\"No Historical Data\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-400\",children:\"Upload more monthly scorecards to see trend analysis for this metric.\"})]})]})]})]})}),document.body);};export default TrendModal;","map":{"version":3,"names":["React","useState","useEffect","createPortal","X","TrendingUp","TrendingDown","Activity","Calendar","Target","AlertCircle","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","ReferenceLine","fetchTrendData","formatTrendAnalysis","getTrendIcon","getTrendColorClass","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TrendModal","_ref","isOpen","onClose","locationId","locationName","metric","metricDisplayName","target","trendData","setTrendData","chartData","setChartData","loading","setLoading","error","setError","selectedPeriod","setSelectedPeriod","fetchTrendDataForModal","document","body","style","overflow","handleEscape","e","key","addEventListener","removeEventListener","response","success","data","dataPoints","Array","isArray","chartPoints","map","point","month","concat","year","value","formattedDate","Date","getMonthNumber","toLocaleDateString","uploadDate","console","warn","err","monthName","months","indexOf","getTrendColor","trend","formatValue","includes","toFixed","getTargetValue","match","parseFloat","position","top","left","width","height","backgroundColor","backdropFilter","zIndex","margin","padding","boxSizing","isolation","onClick","currentTarget","children","transform","maxWidth","minHeight","maxHeight","background","borderRadius","border","boxShadow","display","flexDirection","transition","flexShrink","flexGrow","onMouseEnter","stopPropagation","onMouseLeave","alignItems","justifyContent","borderBottom","gap","className","fontSize","fontWeight","color","marginTop","cursor","flex","overflowY","onChange","Number","currentValue","undefined","currentPeriod","monthsOfData","analysis","currentVsPrevious","length","marginBottom","right","bottom","strokeDasharray","stroke","dataKey","tickFormatter","contentStyle","formatter","labelStyle","y","label","fill","type","strokeWidth","dot","r","activeDot","bestMonth","worstMonth"],"sources":["C:/Users/michaela/service-management-app/frontend/src/components/TrendModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { X, TrendingUp, TrendingDown, Activity, Calendar, Target, AlertCircle } from 'lucide-react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine } from 'recharts';\r\nimport { fetchTrendData, TrendAnalysis, formatTrendAnalysis, getTrendIcon, getTrendColorClass } from '../services/trendApi';\r\n\r\ninterface TrendModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  locationId: string;\r\n  locationName: string;\r\n  metric: string;\r\n  metricDisplayName: string;\r\n  target?: string;\r\n}\r\n\r\ninterface ChartDataPoint {\r\n  month: string;\r\n  value: number;\r\n  formattedDate: string;\r\n  uploadDate: string;\r\n}\r\n\r\nconst TrendModal: React.FC<TrendModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  locationId,\r\n  locationName,\r\n  metric,\r\n  metricDisplayName,\r\n  target\r\n}) => {\r\n  const [trendData, setTrendData] = useState<TrendAnalysis | null>(null);\r\n  const [chartData, setChartData] = useState<ChartDataPoint[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedPeriod, setSelectedPeriod] = useState(12);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && locationId && metric) {\r\n      fetchTrendDataForModal();\r\n    }\r\n  }, [isOpen, locationId, metric, selectedPeriod]);\r\n\r\n  // Lock body scroll when modal is open\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n      return () => {\r\n        document.body.style.overflow = 'unset';\r\n      };\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Handle escape key\r\n  useEffect(() => {\r\n    const handleEscape = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleEscape);\r\n      return () => document.removeEventListener('keydown', handleEscape);\r\n    }\r\n  }, [isOpen, onClose]);\r\n\r\n  const fetchTrendDataForModal = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetchTrendData(locationId, metric, selectedPeriod);\r\n      \r\n      if (response.success && response.data) {\r\n        setTrendData(response.data);\r\n        \r\n        // Transform data for chart - ensure dataPoints is an array\r\n        if (response.data.dataPoints && Array.isArray(response.data.dataPoints)) {\r\n          const chartPoints: ChartDataPoint[] = response.data.dataPoints.map(point => ({\r\n            month: `${point.month} ${point.year}`,\r\n            value: point.value,\r\n            formattedDate: new Date(point.year, getMonthNumber(point.month) - 1).toLocaleDateString('en-US', { \r\n              month: 'short', \r\n              year: '2-digit' \r\n            }),\r\n            uploadDate: point.uploadDate\r\n          }));\r\n          \r\n          setChartData(chartPoints);\r\n        } else {\r\n          console.warn('dataPoints is not an array:', response.data.dataPoints);\r\n          setChartData([]);\r\n        }\r\n      } else {\r\n        setError('Unable to load trend data. This may be the first upload for this metric.');\r\n        setTrendData(null);\r\n        setChartData([]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching trend data:', err);\r\n      setError('Failed to load trend data. Please try again.');\r\n      setTrendData(null);\r\n      setChartData([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getMonthNumber = (monthName: string): number => {\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June',\r\n                   'July', 'August', 'September', 'October', 'November', 'December'];\r\n    return months.indexOf(monthName) + 1;\r\n  };\r\n\r\n  const getTrendColor = (trend: string): string => {\r\n    switch (trend) {\r\n      case 'improving': return '#10B981'; // green-500\r\n      case 'declining': return '#EF4444'; // red-500\r\n      case 'stable': return '#3B82F6'; // blue-500\r\n      default: return '#6B7280'; // gray-500\r\n    }\r\n  };\r\n\r\n  const formatValue = (value: number): string => {\r\n    if (metric.includes('Percent') || metric.includes('%')) {\r\n      return `${value.toFixed(1)}%`;\r\n    }\r\n    if (metric.includes('Days') || metric.includes('Dwell') || metric.includes('Hours')) {\r\n      return `${value.toFixed(1)}`;\r\n    }\r\n    return value.toFixed(1);\r\n  };\r\n\r\n  const getTargetValue = (): number | null => {\r\n    if (!target) return null;\r\n    const match = target.match(/(\\d+\\.?\\d*)/);\r\n    return match ? parseFloat(match[1]) : null;\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return createPortal(\r\n    <div \r\n      style={{ \r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        height: '100vh',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\r\n        backdropFilter: 'blur(8px)',\r\n        zIndex: 999999,\r\n        margin: 0,\r\n        padding: 0,\r\n        boxSizing: 'border-box',\r\n        isolation: 'isolate'\r\n      }}\r\n      onClick={(e) => {\r\n        if (e.target === e.currentTarget) {\r\n          onClose();\r\n        }\r\n      }}\r\n    >\r\n      <div \r\n        style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          width: '90vw',\r\n          maxWidth: '1200px',\r\n          height: '85vh',\r\n          minHeight: '600px',\r\n          maxHeight: '900px',\r\n          background: 'linear-gradient(135deg, #0f172a 0%, #1e293b 100%)',\r\n          borderRadius: '16px',\r\n          border: '1px solid #475569',\r\n          boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.8)',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          overflow: 'hidden',\r\n          transition: 'none',\r\n          flexShrink: 0,\r\n          flexGrow: 0,\r\n          boxSizing: 'border-box',\r\n          margin: 0,\r\n          zIndex: 1000000\r\n        }}\r\n        onMouseEnter={(e) => e.stopPropagation()}\r\n        onMouseLeave={(e) => e.stopPropagation()}\r\n      >\r\n        {/* Header */}\r\n        <div \r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            padding: '24px',\r\n            borderBottom: '1px solid #475569',\r\n            flexShrink: 0,\r\n            boxSizing: 'border-box'\r\n          }}\r\n        >\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>\r\n            <div \r\n              style={{\r\n                width: '48px',\r\n                height: '48px',\r\n                background: 'linear-gradient(135deg, #3b82f6 0%, #2563eb 100%)',\r\n                borderRadius: '12px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n              }}\r\n            >\r\n              <Activity className=\"w-6 h-6 text-white\" />\r\n            </div>\r\n            <div>\r\n              <h2 style={{ fontSize: '24px', fontWeight: 'bold', color: 'white', margin: 0 }}>\r\n                {metricDisplayName}\r\n              </h2>\r\n              <p style={{ color: '#cbd5e1', margin: 0, marginTop: '4px' }}>\r\n                {locationName} - Trend Analysis\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            style={{\r\n              width: '32px',\r\n              height: '32px',\r\n              borderRadius: '8px',\r\n              backgroundColor: '#475569',\r\n              border: 'none',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              cursor: 'pointer',\r\n              transition: 'background-color 0.2s'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              (e.target as HTMLElement).style.backgroundColor = '#64748b';\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              (e.target as HTMLElement).style.backgroundColor = '#475569';\r\n            }}\r\n          >\r\n            <X className=\"w-5 h-5 text-slate-300\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div \r\n          style={{\r\n            flex: 1,\r\n            overflowY: 'auto',\r\n            padding: '24px',\r\n            minHeight: 0,\r\n            position: 'relative',\r\n            boxSizing: 'border-box'\r\n          }}\r\n        >\r\n          {loading && (\r\n            <div className=\"flex items-center justify-center py-12\">\r\n              <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-slate-600 border-t-blue-500\"></div>\r\n              <span className=\"ml-4 text-slate-300\">Loading trend analysis...</span>\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4 mb-6\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <AlertCircle className=\"w-5 h-5 text-red-400\" />\r\n                <span className=\"text-red-400 font-medium\">Unable to Load Trend Data</span>\r\n              </div>\r\n              <p className=\"text-red-300 mt-2\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {!loading && !error && (\r\n            <>\r\n              {/* Period Selector */}\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <span className=\"text-slate-300 font-medium\">Time Period:</span>\r\n                  <select\r\n                    value={selectedPeriod}\r\n                    onChange={(e) => setSelectedPeriod(Number(e.target.value))}\r\n                    className=\"bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white focus:border-blue-500 focus:outline-none\"\r\n                  >\r\n                    <option value={6}>Last 6 months</option>\r\n                    <option value={12}>Last 12 months</option>\r\n                    <option value={24}>Last 24 months</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                {trendData && (\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className={`text-lg ${getTrendColorClass(trendData.trend)}`}>\r\n                      {getTrendIcon(trendData.trend)}\r\n                    </span>\r\n                    <span className={`font-semibold capitalize ${getTrendColorClass(trendData.trend)}`}>\r\n                      {trendData.trend}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Current Metrics Summary */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n                <div className=\"bg-slate-800/50 rounded-lg p-4 border border-slate-700\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <span className=\"text-slate-400 text-sm\">Current Value</span>\r\n                    <Target className=\"w-4 h-4 text-slate-400\" />\r\n                  </div>\r\n                  <div className=\"text-2xl font-bold text-white\">\r\n                    {trendData?.currentValue !== undefined ? formatValue(trendData.currentValue) : 'Loading...'}\r\n                  </div>\r\n                  <div className=\"text-sm text-slate-300\">\r\n                    {trendData?.currentPeriod || 'Loading period...'}\r\n                  </div>\r\n                  {target && <div className=\"text-sm text-slate-300\">Target: {target}</div>}\r\n                </div>\r\n\r\n                {trendData && (\r\n                  <>\r\n                    <div className=\"bg-slate-800/50 rounded-lg p-4 border border-slate-700\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"text-slate-400 text-sm\">Months of Data</span>\r\n                        <Calendar className=\"w-4 h-4 text-slate-400\" />\r\n                      </div>\r\n                      <div className=\"text-2xl font-bold text-white\">{trendData.monthsOfData}</div>\r\n                      <div className=\"text-sm text-slate-300\">Data points available</div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-slate-800/50 rounded-lg p-4 border border-slate-700\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"text-slate-400 text-sm\">Change from Previous</span>\r\n                        {trendData.analysis.currentVsPrevious > 0 ? \r\n                          <TrendingUp className=\"w-4 h-4 text-green-400\" /> : \r\n                          <TrendingDown className=\"w-4 h-4 text-red-400\" />\r\n                        }\r\n                      </div>\r\n                      <div className={`text-2xl font-bold ${\r\n                        trendData.analysis.currentVsPrevious > 0 ? 'text-green-400' : 'text-red-400'\r\n                      }`}>\r\n                        {trendData.analysis.currentVsPrevious > 0 ? '+' : ''}\r\n                        {trendData.analysis.currentVsPrevious.toFixed(1)}%\r\n                      </div>\r\n                      <div className=\"text-sm text-slate-300\">vs last month</div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {/* Chart */}\r\n              {chartData.length > 0 && (\r\n                <div \r\n                  style={{\r\n                    backgroundColor: 'rgba(30, 41, 59, 0.5)',\r\n                    borderRadius: '8px',\r\n                    padding: '24px',\r\n                    border: '1px solid #475569',\r\n                    marginBottom: '24px',\r\n                    boxSizing: 'border-box'\r\n                  }}\r\n                >\r\n                  <h3 style={{\r\n                    fontSize: '18px',\r\n                    fontWeight: '600',\r\n                    color: 'white',\r\n                    margin: 0,\r\n                    marginBottom: '16px'\r\n                  }}>\r\n                    Trend Chart\r\n                  </h3>\r\n                  <div \r\n                    style={{ \r\n                      width: '100%',\r\n                      height: '320px',\r\n                      minHeight: '320px',\r\n                      maxHeight: '320px',\r\n                      position: 'relative',\r\n                      overflow: 'hidden',\r\n                      boxSizing: 'border-box'\r\n                    }}\r\n                  >\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\r\n                        <XAxis \r\n                          dataKey=\"formattedDate\" \r\n                          stroke=\"#9CA3AF\"\r\n                          fontSize={12}\r\n                        />\r\n                        <YAxis \r\n                          stroke=\"#9CA3AF\"\r\n                          fontSize={12}\r\n                          tickFormatter={formatValue}\r\n                          width={60}\r\n                        />\r\n                        <Tooltip \r\n                          contentStyle={{\r\n                            backgroundColor: '#1F2937',\r\n                            border: '1px solid #374151',\r\n                            borderRadius: '8px',\r\n                            color: '#F9FAFB'\r\n                          }}\r\n                          formatter={(value: number) => [formatValue(value), metricDisplayName]}\r\n                          labelStyle={{ color: '#D1D5DB' }}\r\n                        />\r\n                        {getTargetValue() !== null && (\r\n                          <ReferenceLine \r\n                            y={getTargetValue()!} \r\n                            stroke=\"#F59E0B\" \r\n                            strokeDasharray=\"5 5\"\r\n                            label={{ value: \"Target\", position: \"insideTopRight\" as any, fill: \"#F59E0B\" }}\r\n                          />\r\n                        )}\r\n                        <Line\r\n                          type=\"monotone\"\r\n                          dataKey=\"value\"\r\n                          stroke={trendData ? getTrendColor(trendData.trend) : '#3B82F6'}\r\n                          strokeWidth={3}\r\n                          dot={{ r: 6, fill: trendData ? getTrendColor(trendData.trend) : '#3B82F6' }}\r\n                          activeDot={{ r: 8, stroke: '#ffffff', strokeWidth: 2 }}\r\n                        />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Analysis */}\r\n              {trendData && (\r\n                <div className=\"bg-slate-800/50 rounded-lg p-6 border border-slate-700\">\r\n                  <h3 className=\"text-lg font-semibold text-white mb-4\">Trend Analysis</h3>\r\n                  <p className=\"text-slate-300 mb-4\">\r\n                    {formatTrendAnalysis(trendData)}\r\n                  </p>\r\n                  \r\n                  {trendData.analysis.bestMonth && trendData.analysis.worstMonth && (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                      <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\r\n                        <h4 className=\"text-green-400 font-medium mb-2\">Best Performance</h4>\r\n                        <p className=\"text-white\">\r\n                          {formatValue(trendData.analysis.bestMonth.value)} in {trendData.analysis.bestMonth.month} {trendData.analysis.bestMonth.year}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\r\n                        <h4 className=\"text-red-400 font-medium mb-2\">Needs Improvement</h4>\r\n                        <p className=\"text-white\">\r\n                          {formatValue(trendData.analysis.worstMonth.value)} in {trendData.analysis.worstMonth.month} {trendData.analysis.worstMonth.year}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {chartData.length === 0 && !loading && !error && (\r\n                <div className=\"text-center py-12\">\r\n                  <Activity className=\"w-16 h-16 text-slate-500 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No Historical Data</h3>\r\n                  <p className=\"text-slate-400\">\r\n                    Upload more monthly scorecards to see trend analysis for this metric.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default TrendModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}