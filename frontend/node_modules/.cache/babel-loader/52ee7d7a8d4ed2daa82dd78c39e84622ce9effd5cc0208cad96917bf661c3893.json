{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Target,TrendingDown,AlertTriangle,CheckCircle,Award,BarChart3,ArrowLeft,RefreshCw}from'lucide-react';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Backend API base URL\nconst API_BASE_URL='https://wki-service-management-app.onrender.com';// Helper function to convert backend campaign data to frontend format\nconst convertBackendCampaignData=(campaignData,extractedAt)=>{try{var _campaignCompletionRa,_campaignCompletionRa2,_campaignCompletionRa3,_campaignCompletionRa4,_campaignCompletionRa5,_campaignCompletionRa6,_campaignCompletionRa7,_campaignCompletionRa8,_campaignCompletionRa9,_campaignCompletionRa0,_campaignCompletionRa1,_campaignCompletionRa10,_campaignCompletionRa11,_campaignCompletionRa12,_campaignCompletionRa13,_campaignCompletionRa14,_campaignCompletionRa15,_campaignCompletionRa16,_campaignCompletionRa17,_campaignCompletionRa18;console.log('Converting backend campaign data:',campaignData);if(!campaignData){return null;}// FIXED: Handle the correct backend response structure\n// Backend returns: { success: true, data: campaignData, period: \"...\", extractedAt: \"...\" }\n// Check if we have the new detailed campaign structure from pages 2-3\nif(campaignData.locations&&typeof campaignData.locations==='object'){// New structure with detailed campaigns by location from pages 2-3\nconst locations=Object.entries(campaignData.locations).filter(_ref=>{let[locationName]=_ref;return!locationName.toLowerCase().includes('emporia');})// FIXED: Exclude Emporia\n.map(_ref2=>{let[locationName,locationCampaigns]=_ref2;const campaigns=Object.entries(locationCampaigns).map(_ref3=>{var _campaignData$closeRa,_campaignData$nationa,_campaignData$goal,_campaignData$closeRa2,_campaignData$nationa2,_campaignData$goal2;let[campaignName,campaignData]=_ref3;return{id:campaignName.toLowerCase().replace(/[^a-z0-9]/g,'-'),name:campaignName,locationScore:parseFloat((_campaignData$closeRa=campaignData.closeRate)===null||_campaignData$closeRa===void 0?void 0:_campaignData$closeRa.replace('%',''))||0,nationalScore:parseFloat((_campaignData$nationa=campaignData.nationalRate)===null||_campaignData$nationa===void 0?void 0:_campaignData$nationa.replace('%',''))||0,goal:parseFloat((_campaignData$goal=campaignData.goal)===null||_campaignData$goal===void 0?void 0:_campaignData$goal.replace('%',''))||100,status:getStatusFromScores(parseFloat((_campaignData$closeRa2=campaignData.closeRate)===null||_campaignData$closeRa2===void 0?void 0:_campaignData$closeRa2.replace('%',''))||0,parseFloat((_campaignData$nationa2=campaignData.nationalRate)===null||_campaignData$nationa2===void 0?void 0:_campaignData$nationa2.replace('%',''))||0,parseFloat((_campaignData$goal2=campaignData.goal)===null||_campaignData$goal2===void 0?void 0:_campaignData$goal2.replace('%',''))||100)};});const overallScore=campaigns.reduce((sum,camp)=>sum+camp.locationScore,0)/campaigns.length;return{locationName,campaigns,overallScore};});return{locations,extractedAt};}// Check if we have campaign summary data\nif(campaignData.summary&&campaignData.campaigns){// Convert campaigns object to location-based structure\nconst locations=[];const locationMap={};// Process each campaign and organize by location (EXCLUDING Emporia)\nObject.entries(campaignData.campaigns).forEach(_ref4=>{let[campaignName,campaign]=_ref4;Object.entries(campaign.locations||{}).forEach(_ref5=>{var _campaign$nationalRat,_campaign$goal,_campaign$nationalRat2,_campaign$goal2;let[locationName,closeRate]=_ref5;// FIXED: Skip Emporia as they don't track campaigns\nif(locationName.toLowerCase().includes('emporia')){return;}if(!locationMap[locationName]){locationMap[locationName]=[];}locationMap[locationName].push({id:campaignName.toLowerCase().replace(/[^a-z0-9]/g,'-'),name:campaignName,locationScore:parseFloat(closeRate.replace('%',''))||0,nationalScore:parseFloat((_campaign$nationalRat=campaign.nationalRate)===null||_campaign$nationalRat===void 0?void 0:_campaign$nationalRat.replace('%',''))||0,goal:parseFloat((_campaign$goal=campaign.goal)===null||_campaign$goal===void 0?void 0:_campaign$goal.replace('%',''))||100,status:getStatusFromScores(parseFloat(closeRate.replace('%',''))||0,parseFloat((_campaign$nationalRat2=campaign.nationalRate)===null||_campaign$nationalRat2===void 0?void 0:_campaign$nationalRat2.replace('%',''))||0,parseFloat((_campaign$goal2=campaign.goal)===null||_campaign$goal2===void 0?void 0:_campaign$goal2.replace('%',''))||100)});});});// Convert to final structure\nObject.entries(locationMap).forEach(_ref6=>{let[locationName,campaigns]=_ref6;const overallScore=campaigns.reduce((sum,camp)=>sum+camp.locationScore,0)/campaigns.length;locations.push({locationName,campaigns,overallScore});});return{locations,extractedAt};}// Fallback for old campaign completion rates structure\nconst campaignCompletionRates=campaignData.campaignCompletionRates||campaignData;// Create campaigns based on the legacy backend data structure\nconst campaigns=[{id:'cases-closed-correctly',name:'Cases Closed Correctly',locationScore:parseFloat((_campaignCompletionRa=campaignCompletionRates.casesClosedCorrectly)===null||_campaignCompletionRa===void 0?void 0:_campaignCompletionRa.replace('%',''))||0,nationalScore:parseFloat((_campaignCompletionRa2=campaignCompletionRates.nationalAverage)===null||_campaignCompletionRa2===void 0?void 0:_campaignCompletionRa2.replace('%',''))||100,goal:parseFloat((_campaignCompletionRa3=campaignCompletionRates.goal)===null||_campaignCompletionRa3===void 0?void 0:_campaignCompletionRa3.replace('%',''))||100,status:getStatusFromScores(parseFloat((_campaignCompletionRa4=campaignCompletionRates.casesClosedCorrectly)===null||_campaignCompletionRa4===void 0?void 0:_campaignCompletionRa4.replace('%',''))||0,parseFloat((_campaignCompletionRa5=campaignCompletionRates.nationalAverage)===null||_campaignCompletionRa5===void 0?void 0:_campaignCompletionRa5.replace('%',''))||100,parseFloat((_campaignCompletionRa6=campaignCompletionRates.goal)===null||_campaignCompletionRa6===void 0?void 0:_campaignCompletionRa6.replace('%',''))||100)},{id:'cases-meeting-requirements',name:'Cases Meeting Requirements',locationScore:parseFloat((_campaignCompletionRa7=campaignCompletionRates.casesMeetingRequirements)===null||_campaignCompletionRa7===void 0?void 0:_campaignCompletionRa7.replace('%',''))||0,nationalScore:parseFloat((_campaignCompletionRa8=campaignCompletionRates.nationalAverage)===null||_campaignCompletionRa8===void 0?void 0:_campaignCompletionRa8.replace('%',''))||100,goal:parseFloat((_campaignCompletionRa9=campaignCompletionRates.goal)===null||_campaignCompletionRa9===void 0?void 0:_campaignCompletionRa9.replace('%',''))||100,status:getStatusFromScores(parseFloat((_campaignCompletionRa0=campaignCompletionRates.casesMeetingRequirements)===null||_campaignCompletionRa0===void 0?void 0:_campaignCompletionRa0.replace('%',''))||0,parseFloat((_campaignCompletionRa1=campaignCompletionRates.nationalAverage)===null||_campaignCompletionRa1===void 0?void 0:_campaignCompletionRa1.replace('%',''))||100,parseFloat((_campaignCompletionRa10=campaignCompletionRates.goal)===null||_campaignCompletionRa10===void 0?void 0:_campaignCompletionRa10.replace('%',''))||100)},{id:'overall-completion',name:'Overall Campaign Completion',locationScore:parseFloat((_campaignCompletionRa11=campaignCompletionRates.overallCompletionRate)===null||_campaignCompletionRa11===void 0?void 0:_campaignCompletionRa11.replace('%',''))||0,nationalScore:parseFloat((_campaignCompletionRa12=campaignCompletionRates.nationalAverage)===null||_campaignCompletionRa12===void 0?void 0:_campaignCompletionRa12.replace('%',''))||100,goal:parseFloat((_campaignCompletionRa13=campaignCompletionRates.goal)===null||_campaignCompletionRa13===void 0?void 0:_campaignCompletionRa13.replace('%',''))||100,status:getStatusFromScores(parseFloat((_campaignCompletionRa14=campaignCompletionRates.overallCompletionRate)===null||_campaignCompletionRa14===void 0?void 0:_campaignCompletionRa14.replace('%',''))||0,parseFloat((_campaignCompletionRa15=campaignCompletionRates.nationalAverage)===null||_campaignCompletionRa15===void 0?void 0:_campaignCompletionRa15.replace('%',''))||100,parseFloat((_campaignCompletionRa16=campaignCompletionRates.goal)===null||_campaignCompletionRa16===void 0?void 0:_campaignCompletionRa16.replace('%',''))||100)},{id:'customer-satisfaction',name:'Customer Satisfaction',locationScore:parseFloat((_campaignCompletionRa17=campaignCompletionRates.customerSatisfaction)===null||_campaignCompletionRa17===void 0?void 0:_campaignCompletionRa17.replace('%',''))||0,nationalScore:85,// Typical benchmark for customer satisfaction\ngoal:95,status:getStatusFromScores(parseFloat((_campaignCompletionRa18=campaignCompletionRates.customerSatisfaction)===null||_campaignCompletionRa18===void 0?void 0:_campaignCompletionRa18.replace('%',''))||0,85,95)}];// Calculate overall score\nconst overallScore=campaigns.reduce((sum,camp)=>sum+camp.locationScore,0)/campaigns.length;return{locations:[{locationName:'All Locations',// Backend data represents aggregate\ncampaigns,overallScore}],extractedAt};}catch(error){console.error('Error converting backend campaign data:',error);return null;}};// Helper function to determine status based on performance vs national and goal\nconst getStatusFromScores=function(locationScore,nationalScore){let goal=arguments.length>2&&arguments[2]!==undefined?arguments[2]:100;if(locationScore>=goal)return'excellent';if(locationScore>=nationalScore*0.9)return'good';if(locationScore>=nationalScore*0.7)return'warning';return'critical';};// Helper function to process campaign data from locations\nconst processCampaignFromLocations=locations=>{console.log('Processing campaign data from locations:',locations);// Extract campaign-related metrics from location data\nconst campaignMetrics={casesClosedCorrectly:'0%',casesMeetingRequirements:'0%',overallCompletionRate:'0%',customerSatisfaction:'85%',// Default value\nnationalAverage:'85%',goal:'95%'};if(locations&&locations.length>0){// Calculate averages from location data\nlet vscCorrectSum=0,vscRequirementsSum=0,ttActivationSum=0,count=0;locations.forEach(location=>{if(location.vscClosedCorrectly){vscCorrectSum+=parseFloat(location.vscClosedCorrectly.toString().replace('%',''));count++;}if(location.vscCaseRequirements){vscRequirementsSum+=parseFloat(location.vscCaseRequirements.toString().replace('%',''));}if(location.ttActivation){ttActivationSum+=parseFloat(location.ttActivation.toString().replace('%',''));}});if(count>0){campaignMetrics.casesClosedCorrectly=\"\".concat((vscCorrectSum/count).toFixed(1),\"%\");campaignMetrics.casesMeetingRequirements=\"\".concat((vscRequirementsSum/count).toFixed(1),\"%\");campaignMetrics.overallCompletionRate=\"\".concat(((vscCorrectSum+vscRequirementsSum+ttActivationSum)/(count*3)).toFixed(1),\"%\");}}console.log('Processed campaign metrics from locations:',campaignMetrics);return campaignMetrics;};// Helper function to create campaign metrics from location data\nconst createCampaignMetricsFromLocations=backendData=>{try{let dealership,locations=[],extractedAt;// Handle different response structures\nif(backendData&&typeof backendData==='object'){if('dealership'in backendData&&'locations'in backendData){({dealership,locations,extractedAt}=backendData);}else if('data'in backendData&&backendData.data&&typeof backendData.data==='object'){if('dealership'in backendData.data&&'locations'in backendData.data){({dealership,locations,extractedAt}=backendData.data);}}}if(!locations||locations.length===0){return null;}// Use actual campaign data from PDF parsing if available\nconst campaignLocations=locations.filter(location=>!location.name.toLowerCase().includes('emporia'))// FIXED: Exclude Emporia\n.map(location=>{var _location$vscCaseRequ,_location$vscCaseRequ2,_location$triagePerce,_location$triagePerce2,_location$percentCase,_location$percentCase2,_location$ttActivatio,_location$ttActivatio2;// If the location has campaign data from PDF parsing, use it\nif(location.campaigns&&location.campaigns.length>0){const overallScore=location.campaigns.reduce((sum,camp)=>sum+camp.locationScore,0)/location.campaigns.length;return{locationName:location.name,campaigns:location.campaigns.map(campaign=>({id:campaign.campaignId,name:campaign.campaignName,locationScore:campaign.locationScore,nationalScore:campaign.nationalScore,goal:campaign.goal,status:campaign.status||getStatusFromScores(campaign.locationScore,campaign.nationalScore,campaign.goal)})),overallScore};}// Fallback: Create derived campaigns from service metrics (for backwards compatibility)\nconst campaigns=[{id:'vsc-compliance',name:'VSC Compliance Campaign',locationScore:parseFloat((_location$vscCaseRequ=location.vscCaseRequirements)===null||_location$vscCaseRequ===void 0?void 0:_location$vscCaseRequ.toString().replace('%',''))||0,nationalScore:85,// National average benchmark\ngoal:95,status:getStatusFromScores(parseFloat((_location$vscCaseRequ2=location.vscCaseRequirements)===null||_location$vscCaseRequ2===void 0?void 0:_location$vscCaseRequ2.toString().replace('%',''))||0,85,95)},{id:'triage-efficiency',name:'Triage Efficiency Campaign',locationScore:parseFloat((_location$triagePerce=location.triagePercentLess4Hours)===null||_location$triagePerce===void 0?void 0:_location$triagePerce.toString().replace('%',''))||0,nationalScore:75,// National average benchmark\ngoal:80,status:getStatusFromScores(parseFloat((_location$triagePerce2=location.triagePercentLess4Hours)===null||_location$triagePerce2===void 0?void 0:_location$triagePerce2.toString().replace('%',''))||0,75,80)},{id:'case-quality',name:'Case Quality Campaign',locationScore:Math.max(0,100-(parseFloat((_location$percentCase=location.percentCasesWith3Notes)===null||_location$percentCase===void 0?void 0:_location$percentCase.toString().replace('%',''))||0)),nationalScore:95,// Inverted metric - fewer notes is better\ngoal:98,status:getStatusFromScores(Math.max(0,100-(parseFloat((_location$percentCase2=location.percentCasesWith3Notes)===null||_location$percentCase2===void 0?void 0:_location$percentCase2.toString().replace('%',''))||0)),95,98)},{id:'tech-activation',name:'TT+ Activation Campaign',locationScore:parseFloat((_location$ttActivatio=location.ttActivation)===null||_location$ttActivatio===void 0?void 0:_location$ttActivatio.toString().replace('%',''))||0,nationalScore:85,// National average benchmark\ngoal:90,status:getStatusFromScores(parseFloat((_location$ttActivatio2=location.ttActivation)===null||_location$ttActivatio2===void 0?void 0:_location$ttActivatio2.toString().replace('%',''))||0,85,90)}];const overallScore=campaigns.reduce((sum,camp)=>sum+camp.locationScore,0)/campaigns.length;return{locationName:location.name,campaigns,overallScore};});return{locations:campaignLocations,extractedAt:extractedAt||new Date().toISOString()};}catch(error){console.error('Error creating campaign data from locations:',error);return null;}};const getStatusColor=status=>{switch(status){case'excellent':return'from-green-600 to-green-700 border-green-500';case'good':return'from-blue-600 to-blue-700 border-blue-500';case'warning':return'from-yellow-600 to-yellow-700 border-yellow-500';case'critical':return'from-red-600 to-red-700 border-red-500';default:return'from-gray-600 to-gray-700 border-gray-500';}};const getStatusIcon=status=>{switch(status){case'excellent':return/*#__PURE__*/_jsx(Award,{className:\"w-5 h-5 text-green-300\"});case'good':return/*#__PURE__*/_jsx(CheckCircle,{className:\"w-5 h-5 text-blue-300\"});case'warning':return/*#__PURE__*/_jsx(AlertTriangle,{className:\"w-5 h-5 text-yellow-300\"});case'critical':return/*#__PURE__*/_jsx(TrendingDown,{className:\"w-5 h-5 text-red-300\"});default:return/*#__PURE__*/_jsx(BarChart3,{className:\"w-5 h-5 text-gray-300\"});}};export default function CampaignMetrics(){const[campaignData,setCampaignData]=useState(null);const[isLoading,setIsLoading]=useState(true);const[selectedLocation,setSelectedLocation]=useState('all');const[lastUpdated,setLastUpdated]=useState(null);// FIXED: Direct API integration with correct response handling\nconst fetchCampaignDataDirect=async()=>{setIsLoading(true);console.log('📊 Campaign Metrics: Starting data fetch...');try{// Add timeout to API calls\nconst timeoutPromise=new Promise((_,reject)=>{setTimeout(()=>reject(new Error('Request timeout')),10000);// 10 second timeout\n});console.log('🔍 Trying campaign-specific endpoint...');// FIXED: Primary endpoint for campaign data\nconst endpoint=\"\".concat(API_BASE_URL,\"/api/locationMetrics/campaigns\");try{console.log(\"\\uD83C\\uDF10 Fetching from: \".concat(endpoint));const responsePromise=fetch(endpoint);const response=await Promise.race([responsePromise,timeoutPromise]);if(response&&response.ok){const data=await response.json();console.log(\"\\u2705 Response from \".concat(endpoint,\":\"),data);// FIXED: Handle the correct backend response structure\nif(data.success&&data.data){console.log('📋 Found campaign data from backend');console.log('📅 Period:',data.period);console.log('📁 File:',data.fileName);console.log('⏰ Extracted at:',data.extractedAt);// Convert the campaign data using the corrected structure\nconst convertedData=convertBackendCampaignData(data.data,// This is the actual campaign data from backend\ndata.extractedAt||new Date().toISOString());if(convertedData){console.log('✅ Campaign data successfully converted:',convertedData);setCampaignData(convertedData);setLastUpdated(data.period||new Date(data.extractedAt||new Date().toISOString()).toLocaleString());setIsLoading(false);return;// Success - exit early\n}}}else{console.warn(\"\\u274C Campaign endpoint returned status: \".concat(response===null||response===void 0?void 0:response.status));}}catch(endpointError){console.warn(\"\\u274C Campaign endpoint failed:\",endpointError);}// FIXED: Fallback - create campaign metrics from service data\nconsole.log('🔄 No campaign-specific data found, creating from service metrics...');const fallbackResponse=await fetch(\"\".concat(API_BASE_URL,\"/api/locationMetrics\"));if(fallbackResponse.ok){const data=await fallbackResponse.json();console.log('📊 Service metrics data for campaign creation:',data);const parsedData=createCampaignMetricsFromLocations(data);if(parsedData){console.log('✅ Campaign data created from service metrics:',parsedData);setCampaignData(parsedData);setLastUpdated(new Date(parsedData.extractedAt).toLocaleString());}else{console.warn('❌ Could not create campaign data from service metrics');setCampaignData(null);setLastUpdated(null);}}else{console.error('❌ All backend endpoints failed');setCampaignData(null);setLastUpdated(null);}}catch(error){console.error('❌ Error fetching campaign data:',error);setCampaignData(null);setLastUpdated(null);}finally{setIsLoading(false);}};// FIXED: Use the direct fetch function\nconst fetchCampaignData=useCallback(async()=>{await fetchCampaignDataDirect();},[]);// FIXED: Single event listener for scorecard uploads\nuseEffect(()=>{console.log('🚀 Campaign Metrics: Component mounted, fetching initial data...');fetchCampaignData();// Single event listener for scorecard uploads\nconst handleScorecardUploaded=()=>{console.log('📤 Campaign Metrics: Scorecard uploaded event received, refreshing data...');fetchCampaignData();};window.addEventListener('scorecardUploaded',handleScorecardUploaded);return()=>{console.log('🧹 Campaign Metrics: Cleaning up event listeners');window.removeEventListener('scorecardUploaded',handleScorecardUploaded);};},[fetchCampaignData]);if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-red-500 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-400\",children:\"Loading campaign metrics...\"})]})});}// Show empty state when no legitimate campaign data is available\nif(!campaignData){return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center mb-8\",children:/*#__PURE__*/_jsxs(Link,{to:\"/metrics\",className:\"flex items-center text-red-400 hover:text-red-300 mr-4 transition-colors\",children:[/*#__PURE__*/_jsx(ArrowLeft,{size:24,className:\"mr-2\"}),\"Back to Metrics\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold bg-gradient-to-r from-red-600 to-red-700 bg-clip-text text-transparent mb-4\",children:\"Campaign Completion Metrics\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-slate-300\",children:\"Track campaign completion rates across all locations\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-2xl p-8 border border-slate-700 shadow-2xl text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-white mb-4\",children:\"No Campaign Data Available\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 mb-6\",children:\"Campaign completion metrics from pages 2-3 of the W370 Service Scorecard will appear once uploaded. This includes specific campaigns like Bendix EC80 ABS ECU, PACCAR MX-13 repairs, and TT+ Lighting Programming, with close rates by location, national averages, and goal tracking for campaign performance across all Kenworth dealerships.\"})]})]});}const filteredLocations=selectedLocation==='all'?campaignData.locations:campaignData.locations.filter(loc=>loc.locationName.toLowerCase().replace(/\\s+/g,'-')===selectedLocation);// Calculate overall statistics (excluding Emporia since they don't have campaign metrics)\nconst allCampaigns=campaignData.locations.filter(loc=>!loc.locationName.toLowerCase().includes('emporia')).flatMap(loc=>loc.campaigns);const totalCampaigns=allCampaigns.length;const excellentCount=allCampaigns.filter(c=>c.status==='excellent').length;const criticalCount=allCampaigns.filter(c=>c.status==='critical').length;const avgScore=totalCampaigns>0?allCampaigns.reduce((sum,c)=>sum+c.locationScore,0)/totalCampaigns:0;return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center\",children:/*#__PURE__*/_jsxs(Link,{to:\"/metrics\",className:\"flex items-center text-red-400 hover:text-red-300 mr-6 transition-colors\",children:[/*#__PURE__*/_jsx(ArrowLeft,{size:24,className:\"mr-2\"}),\"Back to Metrics\"]})}),/*#__PURE__*/_jsxs(\"button\",{onClick:fetchCampaignData,disabled:isLoading,className:\"flex items-center space-x-2 px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors disabled:opacity-50\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"w-4 h-4 \".concat(isLoading?'animate-spin':'')}),/*#__PURE__*/_jsx(\"span\",{children:\"Refresh\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold bg-gradient-to-r from-red-600 to-red-700 bg-clip-text text-transparent mb-4\",children:\"Campaign Completion Metrics\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-slate-300 mb-2\",children:\"Service Campaign Performance Tracking\"}),lastUpdated&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-slate-400\",children:[\"Last Updated: \",lastUpdated]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid md:grid-cols-4 gap-6 mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-6 border border-slate-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(Target,{className:\"w-8 h-8 text-blue-400\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl font-bold text-white\",children:totalCampaigns})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 font-medium\",children:\"Total Campaigns\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-400 text-sm\",children:\"Across all locations\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-6 border border-slate-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(Award,{className:\"w-8 h-8 text-green-400\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl font-bold text-green-400\",children:excellentCount})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 font-medium\",children:\"At Goal (100%)\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-slate-400 text-sm\",children:[totalCampaigns>0?(excellentCount/totalCampaigns*100).toFixed(1):0,\"% of campaigns\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-6 border border-slate-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(TrendingDown,{className:\"w-8 h-8 text-red-400\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl font-bold text-red-400\",children:criticalCount})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 font-medium\",children:\"Critical Performance\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-slate-400 text-sm\",children:[totalCampaigns>0?(criticalCount/totalCampaigns*100).toFixed(1):0,\"% need attention\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-6 border border-slate-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"w-8 h-8 text-yellow-400\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-2xl font-bold text-white\",children:[avgScore.toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 font-medium\",children:\"Average Score\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-400 text-sm\",children:\"Overall completion rate\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-4 border border-slate-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-slate-300 font-medium mr-4\",children:\"Filter by Location:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedLocation('all'),className:\"px-4 py-2 rounded-lg font-medium transition-colors \".concat(selectedLocation==='all'?'bg-red-600 text-white':'bg-slate-700 text-slate-300 hover:bg-slate-600'),children:\"All Locations\"}),campaignData.locations.map(location=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedLocation(location.locationName.toLowerCase().replace(/\\s+/g,'-')),className:\"px-4 py-2 rounded-lg font-medium transition-colors \".concat(selectedLocation===location.locationName.toLowerCase().replace(/\\s+/g,'-')?'bg-red-600 text-white':'bg-slate-700 text-slate-300 hover:bg-slate-600'),children:location.locationName.replace(' Kenworth','')},location.locationName))]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-8\",children:filteredLocations.map(location=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-2xl p-6 border border-slate-700 shadow-2xl\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-white mb-2\",children:location.locationName}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-slate-400\",children:[\"Overall Score: \",/*#__PURE__*/_jsxs(\"span\",{className:\"font-bold \".concat(location.overallScore>=80?'text-green-400':location.overallScore>=60?'text-yellow-400':'text-red-400'),children:[location.overallScore.toFixed(1),\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-400 text-sm\",children:\"Campaigns\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-white\",children:location.campaigns.length})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-4\",children:location.campaigns.map(campaign=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r \".concat(getStatusColor(campaign.status),\" rounded-xl p-4 border-2\"),children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-start justify-between\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2\",children:[getStatusIcon(campaign.status),/*#__PURE__*/_jsx(\"h3\",{className:\"text-white font-semibold ml-2 text-sm\",children:campaign.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-3 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-white/80\",children:\"Location Score\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl font-bold text-white\",children:[campaign.locationScore,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-white/80\",children:\"National Average\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg font-semibold text-white/90\",children:[campaign.nationalScore,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-white/80\",children:\"Goal\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg font-semibold text-white/90\",children:[campaign.goal,\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white/20 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-full h-2 transition-all duration-500\",style:{width:\"\".concat(Math.min(campaign.locationScore,100),\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-white/70 mt-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"0%\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Goal: \",campaign.goal,\"%\"]})]})]})]})})},campaign.id))})]},location.locationName))})]});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","Target","TrendingDown","AlertTriangle","CheckCircle","Award","BarChart3","ArrowLeft","RefreshCw","Link","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","convertBackendCampaignData","campaignData","extractedAt","_campaignCompletionRa","_campaignCompletionRa2","_campaignCompletionRa3","_campaignCompletionRa4","_campaignCompletionRa5","_campaignCompletionRa6","_campaignCompletionRa7","_campaignCompletionRa8","_campaignCompletionRa9","_campaignCompletionRa0","_campaignCompletionRa1","_campaignCompletionRa10","_campaignCompletionRa11","_campaignCompletionRa12","_campaignCompletionRa13","_campaignCompletionRa14","_campaignCompletionRa15","_campaignCompletionRa16","_campaignCompletionRa17","_campaignCompletionRa18","console","log","locations","Object","entries","filter","_ref","locationName","toLowerCase","includes","map","_ref2","locationCampaigns","campaigns","_ref3","_campaignData$closeRa","_campaignData$nationa","_campaignData$goal","_campaignData$closeRa2","_campaignData$nationa2","_campaignData$goal2","campaignName","id","replace","name","locationScore","parseFloat","closeRate","nationalScore","nationalRate","goal","status","getStatusFromScores","overallScore","reduce","sum","camp","length","summary","locationMap","forEach","_ref4","campaign","_ref5","_campaign$nationalRat","_campaign$goal","_campaign$nationalRat2","_campaign$goal2","push","_ref6","campaignCompletionRates","casesClosedCorrectly","nationalAverage","casesMeetingRequirements","overallCompletionRate","customerSatisfaction","error","arguments","undefined","processCampaignFromLocations","campaignMetrics","vscCorrectSum","vscRequirementsSum","ttActivationSum","count","location","vscClosedCorrectly","toString","vscCaseRequirements","ttActivation","concat","toFixed","createCampaignMetricsFromLocations","backendData","dealership","data","campaignLocations","_location$vscCaseRequ","_location$vscCaseRequ2","_location$triagePerce","_location$triagePerce2","_location$percentCase","_location$percentCase2","_location$ttActivatio","_location$ttActivatio2","campaignId","triagePercentLess4Hours","Math","max","percentCasesWith3Notes","Date","toISOString","getStatusColor","getStatusIcon","className","CampaignMetrics","setCampaignData","isLoading","setIsLoading","selectedLocation","setSelectedLocation","lastUpdated","setLastUpdated","fetchCampaignDataDirect","timeoutPromise","Promise","_","reject","setTimeout","Error","endpoint","responsePromise","fetch","response","race","ok","json","success","period","fileName","convertedData","toLocaleString","warn","endpointError","fallbackResponse","parsedData","fetchCampaignData","handleScorecardUploaded","window","addEventListener","removeEventListener","children","to","size","filteredLocations","loc","allCampaigns","flatMap","totalCampaigns","excellentCount","c","criticalCount","avgScore","onClick","disabled","style","width","min"],"sources":["C:/Users/michaela/service-management-app/frontend/src/components/CampaignMetrics.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Target, TrendingUp, TrendingDown, AlertTriangle, CheckCircle, Award, BarChart3, ArrowLeft, RefreshCw } from 'lucide-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface CampaignData {\r\n  id: string;\r\n  name: string;\r\n  locationScore: number;\r\n  nationalScore: number;\r\n  goal: number;\r\n  status: 'excellent' | 'good' | 'warning' | 'critical';\r\n}\r\n\r\ninterface LocationCampaignData {\r\n  locationName: string;\r\n  campaigns: CampaignData[];\r\n  overallScore: number;\r\n}\r\n\r\ninterface CampaignMetricsData {\r\n  locations: LocationCampaignData[];\r\n  extractedAt: string;\r\n}\r\n\r\n// Backend API base URL\r\nconst API_BASE_URL = 'https://wki-service-management-app.onrender.com';\r\n\r\n// Helper function to convert backend campaign data to frontend format\r\nconst convertBackendCampaignData = (campaignData: any, extractedAt: string): CampaignMetricsData | null => {\r\n  try {\r\n    console.log('Converting backend campaign data:', campaignData);\r\n    \r\n    if (!campaignData) {\r\n      return null;\r\n    }\r\n    \r\n    // FIXED: Handle the correct backend response structure\r\n    // Backend returns: { success: true, data: campaignData, period: \"...\", extractedAt: \"...\" }\r\n    \r\n    // Check if we have the new detailed campaign structure from pages 2-3\r\n    if (campaignData.locations && typeof campaignData.locations === 'object') {\r\n      // New structure with detailed campaigns by location from pages 2-3\r\n      const locations: LocationCampaignData[] = Object.entries(campaignData.locations)\r\n        .filter(([locationName]) => !locationName.toLowerCase().includes('emporia')) // FIXED: Exclude Emporia\r\n        .map(([locationName, locationCampaigns]: [string, any]) => {\r\n          const campaigns: CampaignData[] = Object.entries(locationCampaigns).map(([campaignName, campaignData]: [string, any]) => ({\r\n            id: campaignName.toLowerCase().replace(/[^a-z0-9]/g, '-'),\r\n            name: campaignName,\r\n            locationScore: parseFloat(campaignData.closeRate?.replace('%', '')) || 0,\r\n            nationalScore: parseFloat(campaignData.nationalRate?.replace('%', '')) || 0,\r\n            goal: parseFloat(campaignData.goal?.replace('%', '')) || 100,\r\n            status: getStatusFromScores(\r\n              parseFloat(campaignData.closeRate?.replace('%', '')) || 0,\r\n              parseFloat(campaignData.nationalRate?.replace('%', '')) || 0,\r\n              parseFloat(campaignData.goal?.replace('%', '')) || 100\r\n            )\r\n          }));\r\n          \r\n          const overallScore = campaigns.reduce((sum, camp) => sum + camp.locationScore, 0) / campaigns.length;\r\n          \r\n          return {\r\n            locationName,\r\n            campaigns,\r\n            overallScore\r\n          };\r\n        });\r\n      \r\n      return {\r\n        locations,\r\n        extractedAt\r\n      };\r\n    }\r\n    \r\n    // Check if we have campaign summary data\r\n    if (campaignData.summary && campaignData.campaigns) {\r\n      // Convert campaigns object to location-based structure\r\n      const locations: LocationCampaignData[] = [];\r\n      const locationMap: { [key: string]: CampaignData[] } = {};\r\n      \r\n      // Process each campaign and organize by location (EXCLUDING Emporia)\r\n      Object.entries(campaignData.campaigns).forEach(([campaignName, campaign]: [string, any]) => {\r\n        Object.entries(campaign.locations || {}).forEach(([locationName, closeRate]: [string, any]) => {\r\n          // FIXED: Skip Emporia as they don't track campaigns\r\n          if (locationName.toLowerCase().includes('emporia')) {\r\n            return;\r\n          }\r\n          \r\n          if (!locationMap[locationName]) {\r\n            locationMap[locationName] = [];\r\n          }\r\n          \r\n          locationMap[locationName].push({\r\n            id: campaignName.toLowerCase().replace(/[^a-z0-9]/g, '-'),\r\n            name: campaignName,\r\n            locationScore: parseFloat(closeRate.replace('%', '')) || 0,\r\n            nationalScore: parseFloat(campaign.nationalRate?.replace('%', '')) || 0,\r\n            goal: parseFloat(campaign.goal?.replace('%', '')) || 100,\r\n            status: getStatusFromScores(\r\n              parseFloat(closeRate.replace('%', '')) || 0,\r\n              parseFloat(campaign.nationalRate?.replace('%', '')) || 0,\r\n              parseFloat(campaign.goal?.replace('%', '')) || 100\r\n            )\r\n          });\r\n        });\r\n      });\r\n      \r\n      // Convert to final structure\r\n      Object.entries(locationMap).forEach(([locationName, campaigns]) => {\r\n        const overallScore = campaigns.reduce((sum, camp) => sum + camp.locationScore, 0) / campaigns.length;\r\n        locations.push({\r\n          locationName,\r\n          campaigns,\r\n          overallScore\r\n        });\r\n      });\r\n      \r\n      return {\r\n        locations,\r\n        extractedAt\r\n      };\r\n    }\r\n    \r\n    // Fallback for old campaign completion rates structure\r\n    const campaignCompletionRates = campaignData.campaignCompletionRates || campaignData;\r\n    \r\n    // Create campaigns based on the legacy backend data structure\r\n    const campaigns: CampaignData[] = [\r\n      {\r\n        id: 'cases-closed-correctly',\r\n        name: 'Cases Closed Correctly',\r\n        locationScore: parseFloat(campaignCompletionRates.casesClosedCorrectly?.replace('%', '')) || 0,\r\n        nationalScore: parseFloat(campaignCompletionRates.nationalAverage?.replace('%', '')) || 100,\r\n        goal: parseFloat(campaignCompletionRates.goal?.replace('%', '')) || 100,\r\n        status: getStatusFromScores(\r\n          parseFloat(campaignCompletionRates.casesClosedCorrectly?.replace('%', '')) || 0,\r\n          parseFloat(campaignCompletionRates.nationalAverage?.replace('%', '')) || 100,\r\n          parseFloat(campaignCompletionRates.goal?.replace('%', '')) || 100\r\n        )\r\n      },\r\n      {\r\n        id: 'cases-meeting-requirements',\r\n        name: 'Cases Meeting Requirements',\r\n        locationScore: parseFloat(campaignCompletionRates.casesMeetingRequirements?.replace('%', '')) || 0,\r\n        nationalScore: parseFloat(campaignCompletionRates.nationalAverage?.replace('%', '')) || 100,\r\n        goal: parseFloat(campaignCompletionRates.goal?.replace('%', '')) || 100,\r\n        status: getStatusFromScores(\r\n          parseFloat(campaignCompletionRates.casesMeetingRequirements?.replace('%', '')) || 0,\r\n          parseFloat(campaignCompletionRates.nationalAverage?.replace('%', '')) || 100,\r\n          parseFloat(campaignCompletionRates.goal?.replace('%', '')) || 100\r\n        )\r\n      },\r\n      {\r\n        id: 'overall-completion',\r\n        name: 'Overall Campaign Completion',\r\n        locationScore: parseFloat(campaignCompletionRates.overallCompletionRate?.replace('%', '')) || 0,\r\n        nationalScore: parseFloat(campaignCompletionRates.nationalAverage?.replace('%', '')) || 100,\r\n        goal: parseFloat(campaignCompletionRates.goal?.replace('%', '')) || 100,\r\n        status: getStatusFromScores(\r\n          parseFloat(campaignCompletionRates.overallCompletionRate?.replace('%', '')) || 0,\r\n          parseFloat(campaignCompletionRates.nationalAverage?.replace('%', '')) || 100,\r\n          parseFloat(campaignCompletionRates.goal?.replace('%', '')) || 100\r\n        )\r\n      },\r\n      {\r\n        id: 'customer-satisfaction',\r\n        name: 'Customer Satisfaction',\r\n        locationScore: parseFloat(campaignCompletionRates.customerSatisfaction?.replace('%', '')) || 0,\r\n        nationalScore: 85, // Typical benchmark for customer satisfaction\r\n        goal: 95,\r\n        status: getStatusFromScores(\r\n          parseFloat(campaignCompletionRates.customerSatisfaction?.replace('%', '')) || 0,\r\n          85,\r\n          95\r\n        )\r\n      }\r\n    ];\r\n    \r\n    // Calculate overall score\r\n    const overallScore = campaigns.reduce((sum, camp) => sum + camp.locationScore, 0) / campaigns.length;\r\n    \r\n    return {\r\n      locations: [{\r\n        locationName: 'All Locations', // Backend data represents aggregate\r\n        campaigns,\r\n        overallScore\r\n      }],\r\n      extractedAt\r\n    };\r\n    \r\n  } catch (error) {\r\n    console.error('Error converting backend campaign data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Helper function to determine status based on performance vs national and goal\r\nconst getStatusFromScores = (locationScore: number, nationalScore: number, goal: number = 100): 'excellent' | 'good' | 'warning' | 'critical' => {\r\n  if (locationScore >= goal) return 'excellent';\r\n  if (locationScore >= nationalScore * 0.9) return 'good';\r\n  if (locationScore >= nationalScore * 0.7) return 'warning';\r\n  return 'critical';\r\n};\r\n\r\n// Helper function to process campaign data from locations\r\nconst processCampaignFromLocations = (locations: any[]): any => {\r\n  console.log('Processing campaign data from locations:', locations);\r\n  \r\n  // Extract campaign-related metrics from location data\r\n  const campaignMetrics = {\r\n    casesClosedCorrectly: '0%',\r\n    casesMeetingRequirements: '0%', \r\n    overallCompletionRate: '0%',\r\n    customerSatisfaction: '85%', // Default value\r\n    nationalAverage: '85%',\r\n    goal: '95%'\r\n  };\r\n  \r\n  if (locations && locations.length > 0) {\r\n    // Calculate averages from location data\r\n    let vscCorrectSum = 0, vscRequirementsSum = 0, ttActivationSum = 0, count = 0;\r\n    \r\n    locations.forEach(location => {\r\n      if (location.vscClosedCorrectly) {\r\n        vscCorrectSum += parseFloat(location.vscClosedCorrectly.toString().replace('%', ''));\r\n        count++;\r\n      }\r\n      if (location.vscCaseRequirements) {\r\n        vscRequirementsSum += parseFloat(location.vscCaseRequirements.toString().replace('%', ''));\r\n      }\r\n      if (location.ttActivation) {\r\n        ttActivationSum += parseFloat(location.ttActivation.toString().replace('%', ''));\r\n      }\r\n    });\r\n    \r\n    if (count > 0) {\r\n      campaignMetrics.casesClosedCorrectly = `${(vscCorrectSum / count).toFixed(1)}%`;\r\n      campaignMetrics.casesMeetingRequirements = `${(vscRequirementsSum / count).toFixed(1)}%`;\r\n      campaignMetrics.overallCompletionRate = `${((vscCorrectSum + vscRequirementsSum + ttActivationSum) / (count * 3)).toFixed(1)}%`;\r\n    }\r\n  }\r\n  \r\n  console.log('Processed campaign metrics from locations:', campaignMetrics);\r\n  return campaignMetrics;\r\n};\r\n\r\n// Helper function to create campaign metrics from location data\r\nconst createCampaignMetricsFromLocations = (backendData: any): CampaignMetricsData | null => {\r\n  try {\r\n    let dealership: any, locations: any[] = [], extractedAt: string | undefined;\r\n    \r\n    // Handle different response structures\r\n    if (backendData && typeof backendData === 'object') {\r\n      if ('dealership' in backendData && 'locations' in backendData) {\r\n        ({ dealership, locations, extractedAt } = backendData);\r\n      } else if ('data' in backendData && backendData.data && typeof backendData.data === 'object') {\r\n        if ('dealership' in backendData.data && 'locations' in backendData.data) {\r\n          ({ dealership, locations, extractedAt } = backendData.data);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!locations || locations.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Use actual campaign data from PDF parsing if available\r\n    const campaignLocations: LocationCampaignData[] = locations\r\n      .filter((location: any) => !location.name.toLowerCase().includes('emporia')) // FIXED: Exclude Emporia\r\n      .map((location: any) => {\r\n        // If the location has campaign data from PDF parsing, use it\r\n        if (location.campaigns && location.campaigns.length > 0) {\r\n          const overallScore = location.campaigns.reduce((sum: number, camp: CampaignData) => sum + camp.locationScore, 0) / location.campaigns.length;\r\n          \r\n          return {\r\n            locationName: location.name,\r\n            campaigns: location.campaigns.map((campaign: any) => ({\r\n              id: campaign.campaignId,\r\n              name: campaign.campaignName,\r\n              locationScore: campaign.locationScore,\r\n              nationalScore: campaign.nationalScore,\r\n              goal: campaign.goal,\r\n              status: campaign.status || getStatusFromScores(campaign.locationScore, campaign.nationalScore, campaign.goal)\r\n            })),\r\n            overallScore\r\n          };\r\n        }\r\n        \r\n        // Fallback: Create derived campaigns from service metrics (for backwards compatibility)\r\n        const campaigns: CampaignData[] = [\r\n          {\r\n            id: 'vsc-compliance',\r\n            name: 'VSC Compliance Campaign',\r\n            locationScore: parseFloat(location.vscCaseRequirements?.toString().replace('%', '')) || 0,\r\n            nationalScore: 85, // National average benchmark\r\n            goal: 95,\r\n            status: getStatusFromScores(\r\n              parseFloat(location.vscCaseRequirements?.toString().replace('%', '')) || 0,\r\n              85,\r\n              95\r\n            )\r\n          },\r\n          {\r\n            id: 'triage-efficiency',\r\n            name: 'Triage Efficiency Campaign',\r\n            locationScore: parseFloat(location.triagePercentLess4Hours?.toString().replace('%', '')) || 0,\r\n            nationalScore: 75, // National average benchmark\r\n            goal: 80,\r\n            status: getStatusFromScores(\r\n              parseFloat(location.triagePercentLess4Hours?.toString().replace('%', '')) || 0,\r\n              75,\r\n              80\r\n            )\r\n          },\r\n          {\r\n            id: 'case-quality',\r\n            name: 'Case Quality Campaign',\r\n            locationScore: Math.max(0, 100 - (parseFloat(location.percentCasesWith3Notes?.toString().replace('%', '')) || 0)),\r\n            nationalScore: 95, // Inverted metric - fewer notes is better\r\n            goal: 98,\r\n            status: getStatusFromScores(\r\n              Math.max(0, 100 - (parseFloat(location.percentCasesWith3Notes?.toString().replace('%', '')) || 0)),\r\n              95,\r\n              98\r\n            )\r\n          },\r\n          {\r\n            id: 'tech-activation',\r\n            name: 'TT+ Activation Campaign',\r\n            locationScore: parseFloat(location.ttActivation?.toString().replace('%', '')) || 0,\r\n            nationalScore: 85, // National average benchmark\r\n            goal: 90,\r\n            status: getStatusFromScores(\r\n              parseFloat(location.ttActivation?.toString().replace('%', '')) || 0,\r\n              85,\r\n              90\r\n            )\r\n          }\r\n        ];\r\n\r\n        const overallScore = campaigns.reduce((sum, camp) => sum + camp.locationScore, 0) / campaigns.length;\r\n\r\n        return {\r\n          locationName: location.name,\r\n          campaigns,\r\n          overallScore\r\n        };\r\n      });\r\n\r\n    return {\r\n      locations: campaignLocations,\r\n      extractedAt: extractedAt || new Date().toISOString()\r\n    };\r\n  } catch (error) {\r\n    console.error('Error creating campaign data from locations:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getStatusColor = (status: string) => {\r\n  switch (status) {\r\n    case 'excellent':\r\n      return 'from-green-600 to-green-700 border-green-500';\r\n    case 'good':\r\n      return 'from-blue-600 to-blue-700 border-blue-500';\r\n    case 'warning':\r\n      return 'from-yellow-600 to-yellow-700 border-yellow-500';\r\n    case 'critical':\r\n      return 'from-red-600 to-red-700 border-red-500';\r\n    default:\r\n      return 'from-gray-600 to-gray-700 border-gray-500';\r\n  }\r\n};\r\n\r\nconst getStatusIcon = (status: string) => {\r\n  switch (status) {\r\n    case 'excellent':\r\n      return <Award className=\"w-5 h-5 text-green-300\" />;\r\n    case 'good':\r\n      return <CheckCircle className=\"w-5 h-5 text-blue-300\" />;\r\n    case 'warning':\r\n      return <AlertTriangle className=\"w-5 h-5 text-yellow-300\" />;\r\n    case 'critical':\r\n      return <TrendingDown className=\"w-5 h-5 text-red-300\" />;\r\n    default:\r\n      return <BarChart3 className=\"w-5 h-5 text-gray-300\" />;\r\n  }\r\n};\r\n\r\nexport default function CampaignMetrics() {\r\n  const [campaignData, setCampaignData] = useState<CampaignMetricsData | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedLocation, setSelectedLocation] = useState<string>('all');\r\n  const [lastUpdated, setLastUpdated] = useState<string | null>(null);\r\n\r\n  // FIXED: Direct API integration with correct response handling\r\n  const fetchCampaignDataDirect = async () => {\r\n    setIsLoading(true);\r\n    console.log('📊 Campaign Metrics: Starting data fetch...');\r\n    \r\n    try {\r\n      // Add timeout to API calls\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Request timeout')), 10000); // 10 second timeout\r\n      });\r\n\r\n      console.log('🔍 Trying campaign-specific endpoint...');\r\n      \r\n      // FIXED: Primary endpoint for campaign data\r\n      const endpoint = `${API_BASE_URL}/api/locationMetrics/campaigns`;\r\n      \r\n      try {\r\n        console.log(`🌐 Fetching from: ${endpoint}`);\r\n        const responsePromise = fetch(endpoint);\r\n        const response = await Promise.race([\r\n          responsePromise,\r\n          timeoutPromise\r\n        ]) as Response;\r\n        \r\n        if (response && response.ok) {\r\n          const data = await response.json();\r\n          console.log(`✅ Response from ${endpoint}:`, data);\r\n          \r\n          // FIXED: Handle the correct backend response structure\r\n          if (data.success && data.data) {\r\n            console.log('📋 Found campaign data from backend');\r\n            console.log('📅 Period:', data.period);\r\n            console.log('📁 File:', data.fileName);\r\n            console.log('⏰ Extracted at:', data.extractedAt);\r\n            \r\n            // Convert the campaign data using the corrected structure\r\n            const convertedData = convertBackendCampaignData(\r\n              data.data, // This is the actual campaign data from backend\r\n              data.extractedAt || new Date().toISOString()\r\n            );\r\n            \r\n            if (convertedData) {\r\n              console.log('✅ Campaign data successfully converted:', convertedData);\r\n              setCampaignData(convertedData);\r\n              setLastUpdated(data.period || new Date(data.extractedAt || new Date().toISOString()).toLocaleString());\r\n              setIsLoading(false);\r\n              return; // Success - exit early\r\n            }\r\n          }\r\n        } else {\r\n          console.warn(`❌ Campaign endpoint returned status: ${response?.status}`);\r\n        }\r\n      } catch (endpointError) {\r\n        console.warn(`❌ Campaign endpoint failed:`, endpointError);\r\n      }\r\n      \r\n      // FIXED: Fallback - create campaign metrics from service data\r\n      console.log('🔄 No campaign-specific data found, creating from service metrics...');\r\n      const fallbackResponse = await fetch(`${API_BASE_URL}/api/locationMetrics`);\r\n      \r\n      if (fallbackResponse.ok) {\r\n        const data = await fallbackResponse.json();\r\n        console.log('📊 Service metrics data for campaign creation:', data);\r\n        \r\n        const parsedData = createCampaignMetricsFromLocations(data);\r\n        \r\n        if (parsedData) {\r\n          console.log('✅ Campaign data created from service metrics:', parsedData);\r\n          setCampaignData(parsedData);\r\n          setLastUpdated(new Date(parsedData.extractedAt).toLocaleString());\r\n        } else {\r\n          console.warn('❌ Could not create campaign data from service metrics');\r\n          setCampaignData(null);\r\n          setLastUpdated(null);\r\n        }\r\n      } else {\r\n        console.error('❌ All backend endpoints failed');\r\n        setCampaignData(null);\r\n        setLastUpdated(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error fetching campaign data:', error);\r\n      setCampaignData(null);\r\n      setLastUpdated(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // FIXED: Use the direct fetch function\r\n  const fetchCampaignData = useCallback(async () => {\r\n    await fetchCampaignDataDirect();\r\n  }, []);\r\n\r\n  // FIXED: Single event listener for scorecard uploads\r\n  useEffect(() => {\r\n    console.log('🚀 Campaign Metrics: Component mounted, fetching initial data...');\r\n    fetchCampaignData();\r\n    \r\n    // Single event listener for scorecard uploads\r\n    const handleScorecardUploaded = () => {\r\n      console.log('📤 Campaign Metrics: Scorecard uploaded event received, refreshing data...');\r\n      fetchCampaignData();\r\n    };\r\n    \r\n    window.addEventListener('scorecardUploaded', handleScorecardUploaded);\r\n    \r\n    return () => {\r\n      console.log('🧹 Campaign Metrics: Cleaning up event listeners');\r\n      window.removeEventListener('scorecardUploaded', handleScorecardUploaded);\r\n    };\r\n  }, [fetchCampaignData]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-red-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-slate-400\">Loading campaign metrics...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show empty state when no legitimate campaign data is available\r\n  if (!campaignData) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        <div className=\"flex items-center mb-8\">\r\n          <Link \r\n            to=\"/metrics\" \r\n            className=\"flex items-center text-red-400 hover:text-red-300 mr-4 transition-colors\"\r\n          >\r\n            <ArrowLeft size={24} className=\"mr-2\" />\r\n            Back to Metrics\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-red-600 to-red-700 bg-clip-text text-transparent mb-4\">\r\n            Campaign Completion Metrics\r\n          </h1>\r\n          <p className=\"text-xl text-slate-300\">\r\n            Track campaign completion rates across all locations\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-2xl p-8 border border-slate-700 shadow-2xl text-center\">\r\n          <div className=\"text-6xl mb-4\">📊</div>\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">No Campaign Data Available</h2>\r\n          <p className=\"text-slate-300 mb-6\">\r\n            Campaign completion metrics from pages 2-3 of the W370 Service Scorecard will appear once uploaded. \r\n            This includes specific campaigns like Bendix EC80 ABS ECU, PACCAR MX-13 repairs, and TT+ Lighting Programming, with close rates by location, national averages, and goal tracking for campaign performance across all Kenworth dealerships.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const filteredLocations = selectedLocation === 'all' \r\n    ? campaignData.locations \r\n    : campaignData.locations.filter(loc => \r\n        loc.locationName.toLowerCase().replace(/\\s+/g, '-') === selectedLocation\r\n      );\r\n\r\n  // Calculate overall statistics (excluding Emporia since they don't have campaign metrics)\r\n  const allCampaigns = campaignData.locations\r\n    .filter(loc => !loc.locationName.toLowerCase().includes('emporia'))\r\n    .flatMap(loc => loc.campaigns);\r\n  const totalCampaigns = allCampaigns.length;\r\n  const excellentCount = allCampaigns.filter(c => c.status === 'excellent').length;\r\n  const criticalCount = allCampaigns.filter(c => c.status === 'critical').length;\r\n  const avgScore = totalCampaigns > 0 ? allCampaigns.reduce((sum, c) => sum + c.locationScore, 0) / totalCampaigns : 0;\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-8\">\r\n        <div className=\"flex items-center\">\r\n          <Link \r\n            to=\"/metrics\" \r\n            className=\"flex items-center text-red-400 hover:text-red-300 mr-6 transition-colors\"\r\n          >\r\n            <ArrowLeft size={24} className=\"mr-2\" />\r\n            Back to Metrics\r\n          </Link>\r\n        </div>\r\n        <button\r\n          onClick={fetchCampaignData}\r\n          disabled={isLoading}\r\n          className=\"flex items-center space-x-2 px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors disabled:opacity-50\"\r\n        >\r\n          <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n          <span>Refresh</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"text-center mb-8\">\r\n        <h1 className=\"text-4xl font-bold bg-gradient-to-r from-red-600 to-red-700 bg-clip-text text-transparent mb-4\">\r\n          Campaign Completion Metrics\r\n        </h1>\r\n        <p className=\"text-xl text-slate-300 mb-2\">\r\n          Service Campaign Performance Tracking\r\n        </p>\r\n        {lastUpdated && (\r\n          <p className=\"text-slate-400\">\r\n            Last Updated: {lastUpdated}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Summary Statistics */}\r\n      <div className=\"grid md:grid-cols-4 gap-6 mb-8\">\r\n        <div className=\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-6 border border-slate-700\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <Target className=\"w-8 h-8 text-blue-400\" />\r\n            <span className=\"text-2xl font-bold text-white\">{totalCampaigns}</span>\r\n          </div>\r\n          <p className=\"text-slate-300 font-medium\">Total Campaigns</p>\r\n          <p className=\"text-slate-400 text-sm\">Across all locations</p>\r\n        </div>\r\n\r\n        <div className=\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-6 border border-slate-700\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <Award className=\"w-8 h-8 text-green-400\" />\r\n            <span className=\"text-2xl font-bold text-green-400\">{excellentCount}</span>\r\n          </div>\r\n          <p className=\"text-slate-300 font-medium\">At Goal (100%)</p>\r\n          <p className=\"text-slate-400 text-sm\">{totalCampaigns > 0 ? ((excellentCount / totalCampaigns) * 100).toFixed(1) : 0}% of campaigns</p>\r\n        </div>\r\n\r\n        <div className=\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-6 border border-slate-700\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <TrendingDown className=\"w-8 h-8 text-red-400\" />\r\n            <span className=\"text-2xl font-bold text-red-400\">{criticalCount}</span>\r\n          </div>\r\n          <p className=\"text-slate-300 font-medium\">Critical Performance</p>\r\n          <p className=\"text-slate-400 text-sm\">{totalCampaigns > 0 ? ((criticalCount / totalCampaigns) * 100).toFixed(1) : 0}% need attention</p>\r\n        </div>\r\n\r\n        <div className=\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-6 border border-slate-700\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <BarChart3 className=\"w-8 h-8 text-yellow-400\" />\r\n            <span className=\"text-2xl font-bold text-white\">{avgScore.toFixed(1)}%</span>\r\n          </div>\r\n          <p className=\"text-slate-300 font-medium\">Average Score</p>\r\n          <p className=\"text-slate-400 text-sm\">Overall completion rate</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Location Filter */}\r\n      <div className=\"mb-8\">\r\n        <div className=\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-xl p-4 border border-slate-700\">\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            <span className=\"text-slate-300 font-medium mr-4\">Filter by Location:</span>\r\n            <button\r\n              onClick={() => setSelectedLocation('all')}\r\n              className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                selectedLocation === 'all'\r\n                  ? 'bg-red-600 text-white'\r\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\r\n              }`}\r\n            >\r\n              All Locations\r\n            </button>\r\n            {campaignData.locations.map(location => (\r\n              <button\r\n                key={location.locationName}\r\n                onClick={() => setSelectedLocation(location.locationName.toLowerCase().replace(/\\s+/g, '-'))}\r\n                className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                  selectedLocation === location.locationName.toLowerCase().replace(/\\s+/g, '-')\r\n                    ? 'bg-red-600 text-white'\r\n                    : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\r\n                }`}\r\n              >\r\n                {location.locationName.replace(' Kenworth', '')}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Campaign Data by Location */}\r\n      <div className=\"space-y-8\">\r\n        {filteredLocations.map((location) => (\r\n          <div key={location.locationName} className=\"bg-gradient-to-br from-slate-800 via-slate-900 to-slate-800 rounded-2xl p-6 border border-slate-700 shadow-2xl\">\r\n            {/* Location Header */}\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-white mb-2\">{location.locationName}</h2>\r\n                <p className=\"text-slate-400\">\r\n                  Overall Score: <span className={`font-bold ${\r\n                    location.overallScore >= 80 ? 'text-green-400' : \r\n                    location.overallScore >= 60 ? 'text-yellow-400' : 'text-red-400'\r\n                  }`}>\r\n                    {location.overallScore.toFixed(1)}%\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <p className=\"text-slate-400 text-sm\">Campaigns</p>\r\n                <p className=\"text-2xl font-bold text-white\">{location.campaigns.length}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Campaigns Grid */}\r\n            <div className=\"grid gap-4\">\r\n              {location.campaigns.map((campaign) => (\r\n                <div key={campaign.id} className={`bg-gradient-to-r ${getStatusColor(campaign.status)} rounded-xl p-4 border-2`}>\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center mb-2\">\r\n                        {getStatusIcon(campaign.status)}\r\n                        <h3 className=\"text-white font-semibold ml-2 text-sm\">{campaign.name}</h3>\r\n                      </div>\r\n                      \r\n                      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n                        <div>\r\n                          <p className=\"text-white/80\">Location Score</p>\r\n                          <p className=\"text-2xl font-bold text-white\">{campaign.locationScore}%</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-white/80\">National Average</p>\r\n                          <p className=\"text-lg font-semibold text-white/90\">{campaign.nationalScore}%</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-white/80\">Goal</p>\r\n                          <p className=\"text-lg font-semibold text-white/90\">{campaign.goal}%</p>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"mt-3\">\r\n                        <div className=\"bg-white/20 rounded-full h-2\">\r\n                          <div \r\n                            className=\"bg-white rounded-full h-2 transition-all duration-500\"\r\n                            style={{ width: `${Math.min(campaign.locationScore, 100)}%` }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"flex justify-between text-xs text-white/70 mt-1\">\r\n                          <span>0%</span>\r\n                          <span>Goal: {campaign.goal}%</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}