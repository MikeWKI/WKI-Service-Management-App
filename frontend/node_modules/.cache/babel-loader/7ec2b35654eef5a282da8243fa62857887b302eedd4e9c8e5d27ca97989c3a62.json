{"ast":null,"code":"import _objectSpread from\"C:/Users/michaela/service-management-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useRef}from'react';export function useApiCache(key,fetcher){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const{cacheTime=10*60*1000,// 10 minutes\nstaleTime=5*60*1000,// 5 minutes\nretry=3}=options;const[cache,setCache]=useState(new Map());const retryCountRef=useRef(0);const getCachedData=()=>{const cached=cache.get(key);if(!cached)return null;const now=Date.now();const isExpired=now-cached.timestamp>cacheTime;const isStale=now-cached.timestamp>staleTime;if(isExpired){cache.delete(key);return null;}return _objectSpread(_objectSpread({},cached),{},{isStale});};const fetchData=async()=>{const cached=getCachedData();if(cached&&!cached.isStale){return cached;}setCache(prev=>new Map(prev).set(key,{data:(cached===null||cached===void 0?void 0:cached.data)||null,timestamp:(cached===null||cached===void 0?void 0:cached.timestamp)||0,isLoading:true,error:null}));try{const data=await fetcher();const entry={data,timestamp:Date.now(),isLoading:false,error:null};setCache(prev=>new Map(prev).set(key,entry));retryCountRef.current=0;return entry;}catch(error){const errorMessage=error instanceof Error?error.message:'Unknown error';if(retryCountRef.current<retry){retryCountRef.current++;setTimeout(()=>fetchData(),Math.pow(2,retryCountRef.current)*1000);}else{setCache(prev=>new Map(prev).set(key,{data:(cached===null||cached===void 0?void 0:cached.data)||null,timestamp:(cached===null||cached===void 0?void 0:cached.timestamp)||0,isLoading:false,error:errorMessage}));}throw error;}};const invalidateCache=()=>{setCache(prev=>{const newCache=new Map(prev);newCache.delete(key);return newCache;});};useEffect(()=>{fetchData();},[key]);const cachedEntry=getCachedData();return{data:(cachedEntry===null||cachedEntry===void 0?void 0:cachedEntry.data)||null,isLoading:(cachedEntry===null||cachedEntry===void 0?void 0:cachedEntry.isLoading)||false,error:(cachedEntry===null||cachedEntry===void 0?void 0:cachedEntry.error)||null,isStale:(cachedEntry===null||cachedEntry===void 0?void 0:cachedEntry.isStale)||false,refetch:fetchData,invalidate:invalidateCache};}","map":{"version":3,"names":["useState","useEffect","useRef","useApiCache","key","fetcher","options","arguments","length","undefined","cacheTime","staleTime","retry","cache","setCache","Map","retryCountRef","getCachedData","cached","get","now","Date","isExpired","timestamp","isStale","delete","_objectSpread","fetchData","prev","set","data","isLoading","error","entry","current","errorMessage","Error","message","setTimeout","Math","pow","invalidateCache","newCache","cachedEntry","refetch","invalidate"],"sources":["C:/Users/michaela/service-management-app/frontend/src/hooks/useApiCache.ts"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n\r\ninterface CacheEntry<T> {\r\n  data: T;\r\n  timestamp: number;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ninterface UseApiCacheOptions {\r\n  cacheTime?: number; // Cache duration in milliseconds\r\n  staleTime?: number; // Time before data is considered stale\r\n  retry?: number; // Number of retry attempts\r\n}\r\n\r\nexport function useApiCache<T>(\r\n  key: string,\r\n  fetcher: () => Promise<T>,\r\n  options: UseApiCacheOptions = {}\r\n) {\r\n  const {\r\n    cacheTime = 10 * 60 * 1000, // 10 minutes\r\n    staleTime = 5 * 60 * 1000,  // 5 minutes\r\n    retry = 3\r\n  } = options;\r\n\r\n  const [cache, setCache] = useState<Map<string, CacheEntry<T>>>(new Map());\r\n  const retryCountRef = useRef(0);\r\n\r\n  const getCachedData = () => {\r\n    const cached = cache.get(key);\r\n    if (!cached) return null;\r\n    \r\n    const now = Date.now();\r\n    const isExpired = now - cached.timestamp > cacheTime;\r\n    const isStale = now - cached.timestamp > staleTime;\r\n    \r\n    if (isExpired) {\r\n      cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return { ...cached, isStale };\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const cached = getCachedData();\r\n    \r\n    if (cached && !cached.isStale) {\r\n      return cached;\r\n    }\r\n\r\n    setCache(prev => new Map(prev).set(key, {\r\n      data: cached?.data || null as T,\r\n      timestamp: cached?.timestamp || 0,\r\n      isLoading: true,\r\n      error: null\r\n    }));\r\n\r\n    try {\r\n      const data = await fetcher();\r\n      const entry: CacheEntry<T> = {\r\n        data,\r\n        timestamp: Date.now(),\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n      \r\n      setCache(prev => new Map(prev).set(key, entry));\r\n      retryCountRef.current = 0;\r\n      return entry;\r\n      \r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      \r\n      if (retryCountRef.current < retry) {\r\n        retryCountRef.current++;\r\n        setTimeout(() => fetchData(), Math.pow(2, retryCountRef.current) * 1000);\r\n      } else {\r\n        setCache(prev => new Map(prev).set(key, {\r\n          data: cached?.data || null as T,\r\n          timestamp: cached?.timestamp || 0,\r\n          isLoading: false,\r\n          error: errorMessage\r\n        }));\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const invalidateCache = () => {\r\n    setCache(prev => {\r\n      const newCache = new Map(prev);\r\n      newCache.delete(key);\r\n      return newCache;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [key]);\r\n\r\n  const cachedEntry = getCachedData();\r\n  \r\n  return {\r\n    data: cachedEntry?.data || null,\r\n    isLoading: cachedEntry?.isLoading || false,\r\n    error: cachedEntry?.error || null,\r\n    isStale: cachedEntry?.isStale || false,\r\n    refetch: fetchData,\r\n    invalidate: invalidateCache\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}