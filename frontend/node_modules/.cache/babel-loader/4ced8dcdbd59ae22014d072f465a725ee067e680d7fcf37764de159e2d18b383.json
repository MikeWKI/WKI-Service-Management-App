{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export function ThemeProvider(_ref){let{children}=_ref;const[theme,setTheme]=useState(()=>{const stored=localStorage.getItem('theme');return stored||'auto';});const[actualTheme,setActualTheme]=useState('dark');useEffect(()=>{const mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');const updateActualTheme=()=>{if(theme==='auto'){setActualTheme(mediaQuery.matches?'dark':'light');}else{setActualTheme(theme);}};updateActualTheme();if(theme==='auto'){mediaQuery.addEventListener('change',updateActualTheme);return()=>mediaQuery.removeEventListener('change',updateActualTheme);}},[theme]);useEffect(()=>{localStorage.setItem('theme',theme);document.documentElement.classList.remove('light','dark');document.documentElement.classList.add(actualTheme);},[theme,actualTheme]);const handleSetTheme=newTheme=>{setTheme(newTheme);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,actualTheme,setTheme:handleSetTheme},children:children});}export function useTheme(){const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsx","_jsx","ThemeContext","undefined","ThemeProvider","_ref","children","theme","setTheme","stored","localStorage","getItem","actualTheme","setActualTheme","mediaQuery","window","matchMedia","updateActualTheme","matches","addEventListener","removeEventListener","setItem","document","documentElement","classList","remove","add","handleSetTheme","newTheme","Provider","value","useTheme","context","Error"],"sources":["C:/Users/michaela/service-management-app/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nexport type Theme = 'light' | 'dark' | 'auto';\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme;\r\n  actualTheme: 'light' | 'dark';\r\n  setTheme: (theme: Theme) => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\r\n  const [theme, setTheme] = useState<Theme>(() => {\r\n    const stored = localStorage.getItem('theme') as Theme;\r\n    return stored || 'auto';\r\n  });\r\n\r\n  const [actualTheme, setActualTheme] = useState<'light' | 'dark'>('dark');\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    \r\n    const updateActualTheme = () => {\r\n      if (theme === 'auto') {\r\n        setActualTheme(mediaQuery.matches ? 'dark' : 'light');\r\n      } else {\r\n        setActualTheme(theme);\r\n      }\r\n    };\r\n\r\n    updateActualTheme();\r\n    \r\n    if (theme === 'auto') {\r\n      mediaQuery.addEventListener('change', updateActualTheme);\r\n      return () => mediaQuery.removeEventListener('change', updateActualTheme);\r\n    }\r\n  }, [theme]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', theme);\r\n    document.documentElement.classList.remove('light', 'dark');\r\n    document.documentElement.classList.add(actualTheme);\r\n  }, [theme, actualTheme]);\r\n\r\n  const handleSetTheme = (newTheme: Theme) => {\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, actualTheme, setTheme: handleSetTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTheme() {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAU9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAE3E,MAAO,SAAS,CAAAC,aAAaA,CAAAC,IAAA,CAA8C,IAA7C,CAAEC,QAAwC,CAAC,CAAAD,IAAA,CACvE,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAQ,IAAM,CAC9C,KAAM,CAAAU,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAU,CACrD,MAAO,CAAAF,MAAM,EAAI,MAAM,CACzB,CAAC,CAAC,CAEF,KAAM,CAACG,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAmB,MAAM,CAAC,CAExED,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,UAAU,CAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAEpE,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAIV,KAAK,GAAK,MAAM,CAAE,CACpBM,cAAc,CAACC,UAAU,CAACI,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACvD,CAAC,IAAM,CACLL,cAAc,CAACN,KAAK,CAAC,CACvB,CACF,CAAC,CAEDU,iBAAiB,CAAC,CAAC,CAEnB,GAAIV,KAAK,GAAK,MAAM,CAAE,CACpBO,UAAU,CAACK,gBAAgB,CAAC,QAAQ,CAAEF,iBAAiB,CAAC,CACxD,MAAO,IAAMH,UAAU,CAACM,mBAAmB,CAAC,QAAQ,CAAEH,iBAAiB,CAAC,CAC1E,CACF,CAAC,CAAE,CAACV,KAAK,CAAC,CAAC,CAEXT,SAAS,CAAC,IAAM,CACdY,YAAY,CAACW,OAAO,CAAC,OAAO,CAAEd,KAAK,CAAC,CACpCe,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAE,MAAM,CAAC,CAC1DH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAACd,WAAW,CAAC,CACrD,CAAC,CAAE,CAACL,KAAK,CAAEK,WAAW,CAAC,CAAC,CAExB,KAAM,CAAAe,cAAc,CAAIC,QAAe,EAAK,CAC1CpB,QAAQ,CAACoB,QAAQ,CAAC,CACpB,CAAC,CAED,mBACE3B,IAAA,CAACC,YAAY,CAAC2B,QAAQ,EAACC,KAAK,CAAE,CAAEvB,KAAK,CAAEK,WAAW,CAAEJ,QAAQ,CAAEmB,cAAe,CAAE,CAAArB,QAAA,CAC5EA,QAAQ,CACY,CAAC,CAE5B,CAEA,MAAO,SAAS,CAAAyB,QAAQA,CAAA,CAAG,CACzB,KAAM,CAAAC,OAAO,CAAGnC,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI8B,OAAO,GAAK7B,SAAS,CAAE,CACzB,KAAM,IAAI,CAAA8B,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}